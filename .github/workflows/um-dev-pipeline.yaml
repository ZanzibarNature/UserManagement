name: um-dev-pipeline

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./UserManagement

      - name: Build
        run: dotnet build --no-restore
        working-directory: ./UserManagement

      # - name: Test
      #   run: dotnet test --no-build --verbosity normal
      #   working-directory: ./UserManagement

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          buildkit: true
          push: true
          platforms: linux/amd64,linux/arm64
          tags: zanzibarinh/usermanagement:latest

  # deploy:
  #   runs-on: ubuntu-latest

  #   needs: docker

  #   steps:
  #     - name: Deploy to OpenShift
  #     env:
  #       OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  #       OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  #       OPENSHIFT_NAMESPACE: kawa-foundation-app-dev
  #       GITREPO: https://github.com/ZanzibarNature/UserManagement.git
  #     run: |
  #       # Log in to OpenShift
  #       oc login --server="${OPENSHIFT_SERVER}" --token="${OPENSHIFT_TOKEN}" --insecure-skip-tls-verify
          
  #       # Set the OpenShift project/namespace
  #       oc project "${OPENSHIFT_NAMESPACE}"

  #       # Clone the git repo
  #       git clone "${GITREPO}"

  #       # Navigate to the repository directory
  #       cd UserManagement/

  #       # Checkout the dev branch
  #       git checkout dev

  #       # Example: Deploy using Helm
  #       helm install user-management docker-compose/
